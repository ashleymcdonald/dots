{
	"folder_history":
	[
		"/home/silvs/etc/bspwm/bin",
		"/home/silvs/etc/mytheme"
	],
	"last_version": 3114,
	"last_window_id": 3,
	"log_indexing": false,
	"settings":
	{
		"new_window_height": 0.0,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"b",
						"bspwm"
					],
					[
						"base",
						"base_color"
					],
					[
						"wall",
						"wallpaper"
					]
				]
			},
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"console":
			{
				"height": 0.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/home/silvs/etc/bspwm/bin/external_rules"
			],
			"find":
			{
				"height": 0.0
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 0.0
			},
			"input":
			{
				"height": 0.0
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"replace":
			{
				"height": 0.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 255.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 0.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"b",
						"bspwm"
					],
					[
						"base",
						"base_color"
					],
					[
						"wall",
						"wallpaper"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/home/silvs/etc/mytheme/bin/change",
					"settings":
					{
						"buffer_size": 1899,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/home/silvs/etc/mytheme/lemonbuddy",
					"settings":
					{
						"buffer_size": 9510,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "#\n# Defines keymap for sxhkd\n#\n\n# TMP\n#super + a:\n#  bspc node -f @parent\n#super + d:\n#  bspc node -f @first\n\n# WM {{{\n\n# Focus node\n# If no window exist, target monitor/desktop instead\nsuper + k\n  bspc node -f north || bspc monitor -f north\nsuper + j\n  bspc node -f south || bspc monitor -f south\nsuper + h\n  bspc node -f west || bspc monitor -f west || bspc desktop -f prev\nsuper + l\n  bspc node -f east || bspc monitor -f east || bspc desktop -f next\nsuper + Up\n  bspc node -f north || bspc monitor -f north\nsuper + Down\n  bspc node -f south || bspc monitor -f south\nsuper + Left\n  bspc node -f west || bspc monitor -f west || bspc desktop -f prev\nsuper + Right\n  bspc node -f east || bspc monitor -f east || bspc desktop -f next\n\n# Swap node\n# If no node exist, send node to monitor instead\nsuper + shift + h\n  if ! bspc node -s west.local; then bspc node -m west && bspc node $(bspc query -N -n last) -f; fi\nsuper + shift + l\n  if ! bspc node -s east.local; then bspc node -m east && bspc node $(bspc query -N -n last) -f; fi\nsuper + shift + k\n  if ! bspc node -s north.local; then bspc node -m north && bspc node $(bspc query -N -n last) -f; fi\nsuper + shift + j\n  if ! bspc node -s south.local; then bspc node -m south && bspc node $(bspc query -N -n last) -f; fi\nsuper + shift + Left\n  if ! bspc node -s west.local; then bspc node -m west && bspc node $(bspc query -N -n last) -f; fi\nsuper + shift + Right\n  if ! bspc node -s east.local; then bspc node -m east && bspc node $(bspc query -N -n last) -f; fi\nsuper + shift + Up\n  if ! bspc node -s north.local; then bspc node -m north && bspc node $(bspc query -N -n last) -f; fi\nsuper + shift + Down\n  if ! bspc node -s south.local; then bspc node -m south && bspc node $(bspc query -N -n last) -f; fi\n\n# Resize current window\nsuper + s : {_,shift + ,super + ,shift + super + }h\n  val={200,100,50,10}; bspc node @west -r -${val} || bspc node @east -r -${val}\nsuper + s : {_,shift + ,super + ,shift + super + }l\n  val={200,100,50,10}; bspc node @west -r +${val} || bspc node @east -r +${val}\nsuper + s : {_,shift + ,super + ,shift + super + }k\n  val={200,100,50,10}; bspc node @north -r -${val} || bspc node @south -r -${val}\nsuper + s : {_,shift + ,super + ,shift + super + }j\n  val={200,100,50,10}; bspc node @north -r +${val} || bspc node @south -r +${val}\nsuper + s : {_,shift + ,super + ,shift + super + }Left\n  val={200,100,50,10}; bspc node @west -r -${val} || bspc node @east -r -${val}\nsuper + s : {_,shift + ,super + ,shift + super + }Right\n  val={200,100,50,10}; bspc node @west -r +${val} || bspc node @east -r +${val}\nsuper + s : {_,shift + ,super + ,shift + super + }Up\n  val={200,100,50,10}; bspc node @north -r -${val} || bspc node @south -r -${val}\nsuper + s : {_,shift + ,super + ,shift + super + }Down\n  val={200,100,50,10}; bspc node @north -r +${val} || bspc node @south -r +${val}\n\n\n#\n# alt + Left\n#   bspc config -d focused left_padding $((`bspc config -d focused left_padding` + 10 ))\n#\n# alt + shift + Left\n#   bspc config -d focused left_padding $((`bspc config -d focused left_padding` - 10 ))\n#\nsuper + p : {_,shift + ,super + ,shift + super + }Left\n  bspc config -d focused left_padding $((`bspc config -d focused left_padding` + {200,100,50,10} ))\nsuper + shift + p : {_,shift + ,super + ,shift + super + }Left\n  bspc config -d focused left_padding $((`bspc config -d focused left_padding` - {200,100,50,10} ))\n\nsuper + p : {_,shift + ,super + ,shift + super + }Right\n  bspc config -d focused right_padding $((`bspc config -d focused right_padding` + {200,100,50,10} ))\nsuper + shift + p : {_,shift + ,super + ,shift + super + }Right\n  bspc config -d focused right_padding $((`bspc config -d focused right_padding` - {200,100,50,10} ))\n\nsuper + p : {_,shift + ,super + ,shift + super + }Up\n  bspc config -d focused top_padding $((`bspc config -d focused top_padding` + {200,100,50,10} ))\nsuper + shift + p : {_,shift + ,super + ,shift + super + }Up\n  bspc config -d focused top_padding $((`bspc config -d focused top_padding` - {200,100,50,10} ))\n\nsuper + p : {_,shift + ,super + ,shift + super + }Down\n  bspc config -d focused bottom_padding $((`bspc config -d focused bottom_padding` + {200,100,50,10} ))\nsuper + shift + p : {_,shift + ,super + ,shift + super + }Down\n  bspc config -d focused bottom_padding $((`bspc config -d focused bottom_padding` - {200,100,50,10} ))\n\n##  val={200,100,50,10}; bspc node @west -r -${val} || bspc node @east -r -${val}\n##super + s : {_,shift + ,super + ,shift + super + }Right\n##  val={200,100,50,10}; bspc node @west -r +${val} || bspc node @east -r +${val}\n##super + s : {_,shift + ,super + ,shift + super + }Up\n##  val={200,100,50,10}; bspc node @north -r -${val} || bspc node @south -r -${val}\n##super + s : {_,shift + ,super + ,shift + super + }Down\n##  val={200,100,50,10}; bspc node @north -r +${val} || bspc node @south -r +${val}\n\n\n\n# Set splitting area\nsuper + ctrl + {h,j,k,l}\n  bspc node -p ~{west,south,north,east}\nsuper + ctrl + {Left,Down,Up,Right}\n  bspc node -p ~{west,south,north,east}\n\n# Adjust splitting ratio\nsuper + {minus,equal}\n  bspc node -r $(bspwm_noderatio {+10,-10})\n\n# Clear splitting indication\nsuper + ctrl + space\n  bspc node -p cancel\n\n# Clear splitting indicators for all nodes on the focused desktop\nsuper + ctrl + shift + space\n  bspc query -N | xargs -I id -n 1 bspc node id -p cancel\n\n# window padding ;)\nsuper + shift + {minus,equal}\n  $LOCAL_ETC/bspwm/bin/adjust_padding focused {-,+} 20\n\n# Gaps\nsuper + ctrl + {minus,equal}\n  bspc config -d focused window_gap $((`bspc config -d focused window_gap` {-,+} 2 ))\n\n# Good Ol Blanky \nsuper + shift + space\n  $LOCAL_ETC/bspwm/bin/create_frame\n\n# Cycle non-empty between desktops and monitors\nsuper + {_,ctrl + }bracket{left,right}\n  bspc {desktop,monitor} -f {prev.occupied,next.occupied}\n\n# Cycle between all desktops and monitors\nsuper + shift + {_,ctrl + }bracket{left,right}\n  bspc {desktop,monitor} -f {prev,next}\n\n# Focus desktop / transfer node to desktop\nsuper + {_,shift + }{1-9,0}\n  bspc {desktop -f,node -d} focused:^{1-9,10}\n\n# tag\nsuper + ctrl + shift + {1-9}\n    $LOCAL_ETC/bspwm/bin/tagger tag {1-9}\n#fetch\nsuper + ctrl + {1-9}\n    $LOCAL_ETC/bspwm/bin/tagger fetch {1-9}\n\n# Toggle fullscreen/floating state\nsuper + shift + f\n  bspc node -t \\~fullscreen\nsuper + ctrl + f\n  bspc node -t \\~floating\nsuper + ctrl + shift + f\n  bspc node -t \\~pseudo_tiled\n\n# Close/kill current window\nsuper + {_,shift + }q\n  bspc node -{c,k}\n\n# swap the current node and the biggest node\nsuper + b\n  bspc node -s biggest\n\n# Move focused desktop/node to previously focused monitor\nsuper + {_,shift + }y\n  bspc {desktop,node focused} -m next && bspc {desktop,node} -f last\n\n# Rotate the tree that the current window belongs to\nsuper + {_,shift + }r\n  bspc node @parent -R {90,270}\n\nsuper + ctrl + {_,shift +}r\n  $LOCAL_ETC/bspwm/bin/rotate_display {left,right}\n\n# Cycle desktop layout\n#super + m\nsuper + f\n  bspc desktop -l next\n\n# Cycle between windows\nsuper + {_,shift + }n\n  bspc node -f {prev,next}\n\n# Balance the size of all nodes in the current desktop\nsuper + shift + b\n  bspc desktop -B\n\n# Focus previously current window\nsuper + Tab\n  bspc node -f last\n\n# super + shift + o\n#   xmatch -v -x \"termite\\([0-9]+\\)-\\+-zsh\\([0-9]+\\)\" > /tmp/xx\n\n# Toggle locked state of current window\nsuper + ctrl + comma\n  bspc node -g locked && notify-send \"Toggled locked state\"\n\n# Toggle sticky state of current window\nsuper + ctrl + period\n  bspc node -g sticky && notify-send \"Toggled sticky state\"\n\n# Toggle private state of current window\nsuper + ctrl + slash\n  bspc node -g private && notify-send \"Toggled private state\"\n\n# Focus clicked node\n~button1\n  bspc pointer -g focus\n\nsuper + button{1-3}\n  ; bspc pointer -g {move,resize_side,resize_corner}\n\nsuper + @button{1-3}\n  bspc pointer -u\n\n# Reload configuration\nsuper + Escape\n  $LOCAL_BIN/reloadwm  \nsuper + shift + Escape\n  $CURRENT_THEME/bin/change && $LOCAL_BIN/reloadwm  \n\n# Quit\nsuper + shift + Escape\n  bspc quit 1 ; silent! $LOCAL_ETC/lemonbar/kill\n\n# }}}\n\n\n# Screen Brightness {{{\n\n@XF86MonBrightness{Down,Up}\n  xbacklight -{dec,inc} 1\n\nsuper + @XF86MonBrightness{Down,Up}\n  xbacklight -{dec,inc} 10\n\n# }}}\n\n# Audio {{{\n\n@XF86AudioMute\n  $LOCAL_BIN/toggle_mute\n\n@XF86Audio{Raise,Lower}Volume\n  amixer -q -c 0 set Master playback 1dB{+,-}\n\n@XF86AudioPlay\n  mpc -q toggle\n\n@XF86AudioStop\n  mpc stop\n\n@XF86Audio{Prev,Next}\n  mpc -q {prev,next}\n\nsuper + @button{8,9}\n  mpc -q {prev,next}\n\n# }}}\n# Application launcher {{{\n\nsuper + Return\n  terminator\n\nsuper + shift + Return\n  termite\n\n# program launcher\nsuper + space\n  $LOCAL_BIN/dmenu.mine\n\n\nsuper + d\n  $LOCAL_BIN/rofi_run\n\nalt + Mode_switch\n  $LOCAL_BIN/rofi_run\n\n# # vi; launch vimperator\nalt + Mode_switch + v\n  $LOCAL_BIN/apps/vimperator\n\nsuper + F12\n  authy\nsuper + F11\n  lastpass\nsuper + F10\n  vimperator\nsuper + F9\n  pcmanfm\n# }}}\n# Misc {{{\n\n# Toggle keyboard layouts\nsuper + F8\n  $LOCAL_BIN/kblayout\n\n{shift + ,_} Print\n  scrot {--select,_} '%F_%H-%M-%S_$wx$h.png' -e 'mv $f ~/ ' && notify-send 'Screenshot captured'\n  #scrot {--select,_} '%F_%H-%M-%S_$wx$h.png' -e 'mv $f ~/vault/screenshots/ ' && notify-send 'Screenshot captured'\n#@Print\n#  maim \"/tmp/$(date +%W.%A)-scrot$(date +%s | tail -c 5).png\" && \\\n#  notify-send -a maim \"Took a screenshot (full screen).\"\n#ctrl + @Print\n#  maim -i $(xdotool getactivewindow) \"/tmp/$(date +%W.%A)-window$(date +%s | tail -c 5).png\" && \\\n#  notify-send -a maim \"Took a screenshot (window).\"\n#ctrl + shift + @Print\n#  maim -s -c 0.1,0.05,0.3,1 \"/tmp/$(date +%W.%A)-slop$(date +%s | tail -c 5).png\" && \\\n#  notify-send -a maim \"Took a screenshot (area).\"\n\nsuper + ctrl + shift + r\n  $XDG_CONFIG_HOME/termite/reload; \\\n  $LOCAL_ETC/compton/bin/reload; \\\n  $LOCAL_ETC/sxhkd/bin/reload; \\\n  silent! xrdb -merge -I$LOCAL_ETC/xorg $LOCAL_ETC/xorg/xresources\n\n# Convenient scroll in terminal\nalt + shift + {j,k}\n  xmatch -x \"termite\\([0-9]+\\)-\\+-zsh\\([0-9]+\\)\" && \\\n    xdotool keyup Alt_L j k key Page_{Down,Up} keydown Alt_L\n\nsuper + Pause\n  $LOCAL_BIN/random_wallpaper \"/storage/media/wallpapers/rave_collection2\"\n\n# TODO: Find out how to exec a cmd when entering/leaving chord chain\n# Change key repeat rate to 50ms\n# xset r rate 50\n# Reset key repeat rate\n# xset r rate\n\n# Move cursor\nsuper + ctrl + m : {_,shift + ,shift + super + }{h,j,k,l}\n  m={20,100,200} {x=-1 y=0,x=0 y=1,x=0 y=-1,x=1 y=0}; \\\n  xdotool mousemove_relative -- $(( m*x )) $(( m*y ))\n\n# Move cursor to monitor corners\nsuper + ctrl + m : super + {h,j,k,l}\n  x=$(bspc query -T -d | json root.rectangle.x); x=$(( x + 50 )); \\\n  y=$(bspc query -T -d | json root.rectangle.y); y=$(( y + 50 ));  \\\n  w=$(bspc query -T -d | json root.rectangle.width); w=$(( w - 100 )); \\\n  h=$(bspc query -T -d | json root.rectangle.height); h=$(( h - 100 )); \\\n  dx=$(( x + w ));  dy=$(( y + h )); \\\n  xdotool mousemove {$x $y,$x $dy,$dx $y,$dx $dy}\n\n# Simulate mouse button click\nsuper + ctrl + m : {_,shift + ,ctrl + }space\n  xdotool click {1,3,2}\n\nsuper + ctrl + @F{1,2,3,4,5,6,7,8,9,10,11,12}\n  sudo chvt {1,2,3,4,5,6,7,8,9,10,11,12}\n# }}}\n",
					"file": "/home/silvs/etc/sxhkd/sxhkdrc",
					"file_size": 10899,
					"file_write_time": 131116784022564931,
					"settings":
					{
						"buffer_size": 11049,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/home/silvs/etc/mytheme/compton",
					"settings":
					{
						"buffer_size": 5249,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/home/silvs/etc/mytheme/bin/init",
					"settings":
					{
						"buffer_size": 47,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/home/silvs/etc/mytheme/bspwm",
					"settings":
					{
						"buffer_size": 974,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/home/silvs/etc/bspwm/bspwmrc",
					"settings":
					{
						"buffer_size": 6139,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"console":
			{
				"height": 0.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/home/silvs/etc/mytheme",
				"/home/silvs/etc/mytheme/bin"
			],
			"file_history":
			[
				"/home/silvs/etc/bspwm/bin/external_rules"
			],
			"find":
			{
				"height": 0.0
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/home/silvs/etc/mytheme"
				}
			],
			"groups":
			[
				{
					"selected": 2,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/home/silvs/etc/mytheme/bin/change",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1899,
								"regions":
								{
								},
								"selection":
								[
									[
										190,
										190
									]
								],
								"settings":
								{
									"syntax": "Packages/ShellScript/Shell-Unix-Generic.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 6,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/home/silvs/etc/mytheme/lemonbuddy",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 9510,
								"regions":
								{
								},
								"selection":
								[
									[
										7706,
										7706
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 10032.0,
								"zoom_level": 1.0
							},
							"stack_index": 5,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/home/silvs/etc/sxhkd/sxhkdrc",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 11049,
								"regions":
								{
								},
								"selection":
								[
									[
										6073,
										6073
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						},
						{
							"buffer": 3,
							"file": "/home/silvs/etc/mytheme/compton",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 5249,
								"regions":
								{
								},
								"selection":
								[
									[
										1632,
										1632
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage",
									"tab_size": 2,
									"translate_tabs_to_spaces": true,
									"word_wrap": false
								},
								"translation.x": 0.0,
								"translation.y": 1287.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						},
						{
							"buffer": 4,
							"file": "/home/silvs/etc/mytheme/bin/init",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 47,
								"regions":
								{
								},
								"selection":
								[
									[
										47,
										47
									]
								],
								"settings":
								{
									"syntax": "Packages/ShellScript/Shell-Unix-Generic.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 4,
							"type": "text"
						},
						{
							"buffer": 5,
							"file": "/home/silvs/etc/mytheme/bspwm",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 974,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/ShellScript/Shell-Unix-Generic.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"type": "text"
						},
						{
							"buffer": 6,
							"file": "/home/silvs/etc/bspwm/bspwmrc",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 6139,
								"regions":
								{
								},
								"selection":
								[
									[
										3207,
										3207
									]
								],
								"settings":
								{
									"syntax": "Packages/ShellScript/Shell-Unix-Generic.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 2673.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 0.0
			},
			"input":
			{
				"height": 0.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0,0,0,0,0,1610,57,3181,1746,3200,1800",
			"project": "",
			"replace":
			{
				"height": 0.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 255.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 2,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"b",
						"bspwm"
					],
					[
						"base",
						"base_color"
					],
					[
						"wall",
						"wallpaper"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/home/silvs/etc/bspwm/bin/create_frame.c",
					"settings":
					{
						"buffer_size": 1396,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"console":
			{
				"height": 0.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/home/silvs/etc/bspwm/bin"
			],
			"file_history":
			[
				"/home/silvs/etc/bspwm/bin/external_rules"
			],
			"find":
			{
				"height": 0.0
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/home/silvs/etc/bspwm/bin"
				}
			],
			"groups":
			[
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/home/silvs/etc/bspwm/bin/create_frame.c",
							"semi_transient": true,
							"settings":
							{
								"buffer_size": 1396,
								"regions":
								{
								},
								"selection":
								[
									[
										289,
										289
									]
								],
								"settings":
								{
									"syntax": "Packages/C++/C.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 0.0
			},
			"input":
			{
				"height": 0.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0,0,0,0,0,15,57,1586,1746,3200,1800",
			"project": "",
			"replace":
			{
				"height": 0.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 255.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 3,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
		]
	}
}
